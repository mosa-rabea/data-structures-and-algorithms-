/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linked.list;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
    @Test void linkedlistinsert(){
        LinkedList linkedList = new LinkedList();
        assertEquals(null,linkedList.head );

        linkedList.insert(2);
        assertEquals(2,linkedList.head.value );

    }

    @Test void linkedlistincludes() {
        LinkedList<Integer> linkedList = new LinkedList<Integer>();
        linkedList.insert(1);
        linkedList.insert(2);
        linkedList.insert(3);
        linkedList.insert(4);


        assertTrue(linkedList.includes(3));
        assertFalse(linkedList.includes(7));

    }

    @Test void linkedlistoString(){
        LinkedList<Integer> linkedList = new LinkedList<Integer>();
        linkedList.insert(1);
        linkedList.insert(2);
        linkedList.insert(3);



        assertEquals(3,linkedList.head.value);
        assertEquals("{ 3 } -> { 2 } -> { 1 } -> NULL",linkedList.toString());


    }


    // cc6






    @Test void insertBeforeTest(){
        LinkedList<Integer> linkedList = new LinkedList<>();
        linkedList.insert(1);
        linkedList.insert(2);
        linkedList.insert(3);
        linkedList.insertBefore(2,5);
        assertTrue(linkedList.includes(5) , "Return true if it finds the test element");

    }
    @Test void insertAfterTest(){
        LinkedList<Integer> linkedList = new LinkedList<>();
        linkedList.insert(1);
        linkedList.insert(3);
        linkedList.insert(2);
        linkedList.insertBefore(1,5);
        assertTrue(linkedList.includes(5) , "Return true if it finds the test element");

    }
    @Test void kthTest(){
        LinkedList<Integer> linkedList = new LinkedList<>();
        linkedList.insert(1);
        linkedList.insert(1);
        linkedList.insert(1);

assertEquals("{1}",linkedList.kthFromEnd(0));
    }

}
