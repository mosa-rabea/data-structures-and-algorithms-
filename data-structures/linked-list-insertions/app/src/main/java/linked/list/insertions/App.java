/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linked.list.insertions;
import java.util.ArrayList;
public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());


        LinkedList testList = new LinkedList();
        testList.insert(8);
        testList.insert(5);
        testList.insert(3);
        testList.insert(1);

//

        System.out.println(testList);
        System.out.println(reverseLinkedList(testList));
    }

    public static LinkedList zipTwoLinkedLists(LinkedList a , LinkedList b){
        Node currentA = a.head;
        Node currentB = b.head;
        while(true){
            if (currentA != null && currentB != null){
                a.insertAfter(currentA.value , currentB.value);
                currentA = currentA.next;
                currentA = currentA.next;
                currentB=currentB.next;
            }else if(currentA == null && currentB !=null){
                a.append(currentB.value);
                currentB=currentB.next;
            }else{
                break;
            }
        }
        return a;
    }



    public static LinkedList reverseLinkedList(LinkedList list){
        LinkedList reverse = new LinkedList();
        ArrayList<Integer> arrList = new ArrayList<>();
        Node currList = list.head;

        while (currList != null){
            arrList.add(currList.value);

            currList = currList.next;
        }

        for (int i = 0; i < arrList.size(); i++) {
            Node addedNode = new Node(arrList.get(i));
            if (reverse.head != null) {
                addedNode.next = reverse.head;
            }
            reverse.head=addedNode;
        }


        return reverse;
    }
}
